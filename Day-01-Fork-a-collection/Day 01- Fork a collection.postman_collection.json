{
	"info": {
		"_postman_id": "a342fc31-463d-4cc8-8ad8-7c5cc31fe87d",
		"name": "Day 01: Fork a collection",
		"description": "## Instructions for Day 1: Fork a collection\n\n1.  **Get the challenge:** Fork [the parent collection `Day 01: Fork a collection`](https://www.postman.com/postman/workspace/30-days-of-postman-for-developers/documentation/1559645-02f21db3-4424-4a4d-8bae-1b1fe1f75987) to your own public workspace.\n2.  **Read the documentation:** In your fork, select the first folder `Fork a collection`. Expand the context bar on the right to follow the instructions in the collection documentation. If you find it bothersome to navigate between the documentation while working in a different area of Postman, remember that you can open a new tab to keep your place in the documentation, and then switch between tabs.\n3.  **Submit your solution:** Select the second folder `Submit your solution` and follow the instructions in the documentation to validate your solution.\n    \n\n## Concepts covered\n\n*   [Forking a collection](https://learning.postman.com/docs/collaborating-in-postman/version-control-for-collections/#forking-a-collection)\n*   [Viewing documentation](https://learning.postman.com/docs/publishing-your-api/viewing-documentation/)\n*   [Sending a request](https://learning.postman.com/docs/sending-requests/requests/)\n    \n\n## Additional resources\n\n*   [Version Control for Collections](https://youtu.be/QKxukXJWRPI) video\n*   [Fork vs import](https://www.tiktok.com/@joycejetson/video/7060859372649467183) tiktok\n    \n\n## Next challenge\n\n*   [Collections and environments](https://www.postman.com/postman/workspace/30-days-of-postman-for-developers/documentation/1559645-3e883267-c7b7-4696-81a8-13308d3fda7f)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13924255",
		"_collection_link": "https://www.postman.com/gold-escape-737985/workspace/alireza-30-days-of-postman/collection/13924255-a342fc31-463d-4cc8-8ad8-7c5cc31fe87d?action=share&source=collection_link&creator=13924255"
	},
	"item": [
		{
			"name": "Fork a collection",
			"item": [
				{
					"name": "echo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payload\": \"hello world\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						},
						"description": "It's time to work on your first challenge.\n\n1. **Review the request:** Notice the different parts of this API request.\n  - `POST` HTTP request method - to send new data to an API\n  - `https://postman-echo.com/post` request URL\n  - JSON request body\n1. **Send the request**:  **Send** the request, and look at the response on the bottom.\n  - HTTP status code\n  - Response time\n  - Response size\n  - Response body\n1. **Inspect the response body:** Under the **Pretty** view of the response body, inspect the JSON data object returned from the server. This sample endpoint from [Postman's Echo API](https://www.postman.com/postman/workspace/published-postman-templates/documentation/631643-f695cab7-6878-eb55-7943-ad88e1ccfd65?ctx=documentation) echoes back data provided by the client.\n\n  In the JSON data response, find a header called `user-agent` and copy the value that appears after the colon symbol. We will need this data for the next step. It should look something like this:\n\n```\n\"user-agent\": \"<copy-this-part-here>\",\n```\n\nOnce you find this data, move on to the next folder in this collection to submit your solution."
					},
					"response": [
						{
							"name": "echo",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payload\": \"hello world\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://postman-echo.com/post",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"post"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Aug 2024 06:19:34 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "777"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.25.3"
								},
								{
									"key": "ETag",
									"value": "W/\"309-SXo397zUrJC8D+oYulial41DDc0\""
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3AOsBZ_S2kYcsUHHcaCckZigfxvp2as1NU.p5luqmpzyACTKkojRgBVmzamrRgphyzeuwpokDuQQbM; Path=/; HttpOnly"
								}
							],
							"cookie": [],
							"body": "{\n    \"args\": {},\n    \"data\": {\n        \"payload\": \"hello world\"\n    },\n    \"files\": {},\n    \"form\": {},\n    \"headers\": {\n        \"host\": \"postman-echo.com\",\n        \"x-forwarded-proto\": \"http\",\n        \"x-request-start\": \"t=1724825974.689\",\n        \"connection\": \"close\",\n        \"content-length\": \"32\",\n        \"x-forwarded-port\": \"443\",\n        \"x-amzn-trace-id\": \"Root=1-66cec176-37ce0af53fac0c2b5d0b4f13\",\n        \"content-type\": \"application/json\",\n        \"user-agent\": \"PostmanRuntime/7.41.2\",\n        \"accept\": \"*/*\",\n        \"postman-token\": \"1c98c81c-90aa-49a1-a851-b1415ee1f5df\",\n        \"accept-encoding\": \"gzip, deflate, br\",\n        \"cookie\": \"sails.sid=s%3AXQXXv6a55w_bmwIwWuBoy7liG2S9vUPy.WjYgxbNoXtz76AijHvbylout4nx7K%2FTxPybGwxSE7yQ\"\n    },\n    \"json\": {\n        \"payload\": \"hello world\"\n    },\n    \"url\": \"http://postman-echo.com/post\"\n}"
						}
					]
				}
			],
			"description": "Follow the instructions in the request documentation."
		},
		{
			"name": "Submit your solution",
			"item": [
				{
					"name": "submit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// counter for passed tests\r",
									"let pass = 0\r",
									"let totalToPass = 3\r",
									"\r",
									"pm.test(\"If you have any failures, review the failed test results or ask for support in the community forum. When all of your tests pass, you are done with today's challenge.\", () => {\r",
									"    pm.expect(true);\r",
									"    pass += 1\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"    pass += 1\r",
									"});\r",
									"\r",
									"pm.test(\"User Agent is correct\", () => {\r",
									"    pm.expect(pm.response.json().args[\"user-agent\"]).includes(\"PostmanRuntime/\")\r",
									"    pass += 1\r",
									"})\r",
									"\r",
									"// visualization for test results\r",
									"let template\r",
									"if (pass == totalToPass) {\r",
									"    template = `üç™ passing!\r",
									"        <br />\r",
									"        <img src=\"https://media4.giphy.com/media/THIvbrqPhSsTHxpuua/200w.webp\" />\r",
									"    `\r",
									"} else {\r",
									"    template = `üôÖ please try again\r",
									"        <br />\r",
									"        <img src=\"https://media2.giphy.com/media/CM1rHbKDMH2BW/200.webp\" />\r",
									"    `\r",
									"}\r",
									"pm.visualizer.set(template)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get?user-agent=PostmanRuntime/7.41.2",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "user-agent",
									"value": "PostmanRuntime/7.41.2",
									"description": "Replace the value `your-data-here` with the data you found in the previous step. "
								}
							]
						},
						"description": "It's time to submit your first solution.\n\n1.  **Enter your data:** Under the **Params** tab, find the key `user-agent`. Replace the value `your-data-here` with the data you found in the previous step. When you update the query parameters, notice the request URL also updates with this new information.\n1.  **Validate your solution**: Hit **Send** and look under the **Tests** tab of the server response at the bottom to review your test results.\n1.  Under the **Tests** tab, click on the `Visualize` option to see some fun output!\n    \n\nIf you have any failures, [review the failed test results](https://youtu.be/S3GKLTVRtmE) or ask for support in the [community forum](https://community.postman.com/). When all of your tests pass, you are done with today's challenge. Remember to save your changes as you'll need to pass all the challenges to claim a **30 days of Postman** badge."
					},
					"response": [
						{
							"name": "submit",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://postman-echo.com/get?user-agent=PostmanRuntime/7.41.2",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"get"
									],
									"query": [
										{
											"key": "user-agent",
											"value": "PostmanRuntime/7.41.2",
											"description": "Replace the value `your-data-here` with the data you found in the previous step. "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Aug 2024 06:23:24 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "663"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.25.3"
								},
								{
									"key": "ETag",
									"value": "W/\"297-n5YkX/LIdr/9Rk9p9Ov41293cYk\""
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3AiP-IcuyPFxLL7-JKl_nKh09FW5WRutow.%2BcPmyZ8ETBghfoVAl57C9c3mAZMy1lLPIHZBZ1BkPBs; Path=/; HttpOnly"
								}
							],
							"cookie": [],
							"body": "{\n    \"args\": {\n        \"user-agent\": \"PostmanRuntime/7.41.2\"\n    },\n    \"headers\": {\n        \"host\": \"postman-echo.com\",\n        \"x-forwarded-proto\": \"http\",\n        \"x-request-start\": \"t=1724826204.621\",\n        \"connection\": \"close\",\n        \"x-forwarded-port\": \"443\",\n        \"x-amzn-trace-id\": \"Root=1-66cec25c-12165cb2049ef76340848214\",\n        \"user-agent\": \"PostmanRuntime/7.41.2\",\n        \"accept\": \"*/*\",\n        \"postman-token\": \"8641f727-911a-4f32-ae06-24bd01607c57\",\n        \"accept-encoding\": \"gzip, deflate, br\",\n        \"cookie\": \"sails.sid=s%3ALLVGr6B5cpyzxdplfgaHpQDYqUGeb4DZ.DBM6rnUkEuqtq5lX0cJ5jjFo1IXO8IRJCJNYSUqecjY\"\n    },\n    \"url\": \"http://postman-echo.com/get?user-agent=PostmanRuntime/7.41.2\"\n}"
						}
					]
				}
			],
			"description": "Follow the instructions in the request documentation."
		}
	]
}